/*■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	ファイル名	：	/Mul_light/Kernel/FS/Template/Template.cpp
	概要		：	てんぷれ(ファイルシステム)
	詳細		：
	責任者		：
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■*/



/*■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	インクルード
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■*/
#include	"Common.h"
#include	"Template.h"



/*■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	定数定義
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■*/



/*■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	グローバル
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■*/



/*■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	てんぷれ(FS)クラス：パブリックメソッド
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■*/
/*******************************************************************************
	概要	：	てんぷれ(FS)クラスの初期化
	説明	：
	Include	：	Template.h
	引数	：	void
	戻り値	：	void
*******************************************************************************/
void	Template::Init( void )
{
}


/*******************************************************************************
	概要	：	ファイルシステム確認
	説明	：	対象のデバイスのファイルシステムがTemplateか調べます。
	Include	：	Template.h
	引数	：	u1 u1_DeviceID		確認するデバイス番号
	戻り値	：	s4		エラー情報
*******************************************************************************/
s4		Template::CheckFS( u1 u1_DeviceID )
{
	return SUCCESS;
}


/*******************************************************************************
	概要	：	読み取り
	説明	：	てんぷれのファイルシステムからデータを読み取ります。
	Include	：	Template.h
	引数	：	const char* CPc_FilePath		'/'から始まる絶対パス
				const char* CPc_NewFileName		新しい名前
	戻り値	：	s4		エラー情報
*******************************************************************************/
s4		Template::Rename( const char* CPc_FilePath, const char* CPc_NewFileName )
{
	return ERROR_NOTSUPPORT;
}


/*******************************************************************************
	概要	：	読み取り
	説明	：	てんぷれのファイルシステムからデータを読み取ります。
	Include	：	Template.h
	引数	：	const char* CPc_FilePath		'/'から始まる絶対パス
				ui ui_Offset		ファイル内のオフセット
				u1* Pu1_Addr		格納先アドレス
				ui ui_Size			処理するサイズ
	戻り値	：	s4		エラー情報
*******************************************************************************/
s4		Template::Read( const char* CPc_FilePath, ui ui_Offset, u1* Pu1_Addr, ui ui_Size )
{
	return SUCCESS;
}


/*******************************************************************************
	概要	：	書き込み
	説明	：	てんぷれのファイルシステムにデータを書き込みます
	Include	：	Template.h
	引数	：	const char* CPc_FilePath		'/'から始まる絶対パス
				ui ui_Offset		ファイル内のオフセット
				u1* Pu1_Addr		格納先アドレス
				ui ui_Size			処理するサイズ
	戻り値	：	s4		エラー情報
*******************************************************************************/
s4		Template::Write( const char* CPc_FilePath, ui ui_Offset, u1* Pu1_Addr, ui ui_Size )
{
	return ERROR_NOTSUPPORT;
}



/*■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	End of file
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■*/

